//KC03E62A JOB ,'Ryan',MSGCLASS=H
//STEP1    EXEC  PGM=ASSIST
//STEPLIB    DD  DSN=KC02293.ASSIST.LOADLIB,DISP=SHR
//SYSPRINT   DD  SYSOUT=*
//SYSIN      DD  *
************************************************************
*
*  Program:     ASSIGN4
*  Programmer:  Ryan Rickgauer
*  zID:         z1729300
*  Due date:    3/3/2019
*
*  Register usage:
*    1        xdeci
*   10        brach location
*   13        parameters
*   14        not using
*   15        base register
************************************************************
MAIN     CSECT
         USING MAIN,15
         LA    13,TABLE     load table address
         ST    13,PARMS     store table in parameters
         LA    13,EOT       load end of table
         ST    13,PARMS+4   store end of table in params
         LA    13,TABLELEN  load table length address
         ST    13,PARMS+8   store table length in params
         LA    13,PARMS     load parms into r13
         BAL   10,BUILD     build the table
         BAL   10,PRINT     call print function
         BAL   10,ODDS      call odds function
         BR    14           end of main
***********************************
*
*  Register usage:
*    1        xdeci
*    2        num used in base ten
*    3        address of the table
*    4        EOT address
*    5        table address
*    6        counter
*   10        address for return
*   13        params
*   14        not using
*   15        base register
*
***********************************
BUILD    DS    0H           
         SR    6,6          set r6 to zero
         LM    3,5,0(13)    load params into registers 3-5
BLOOP    XREAD BUFFER,80    read line from input file
         BL    BEND         check for failure
         LA    1,BUFFER     load address into r1
BLOOP1   XDECI 2,0(0,1)     read the number
         BO    BLOOP        check for failure
         A     6,=F'1'      add one to r6
         ST    2,0(0,3)     place in table
         LA    3,4(0,3)     go to next pointer
         CR    3,4          compare table pointer to eot
         BE    BEND         check if at end of table
         B     BLOOP1       go to the top loop
BEND     ST    6,0(0,5)     store the number of elements
         BR    10           break
***********************************
*
*  Register usage:
*    1        xdeci
*    2        line to print
*    3        table
*    4        end of table
*    5        table length
*    6        width
*    7        table value
*   10        return address
*   13        params
*   14        not using
*   15        base register
*
***********************************
PRINT    DS    0H           
         XPRNT PHEAD,44     prints table head
         LM    3,5,0(13)    load params into registers 3-5
         L     5,0(0,5)     loads table length
PLOOP    L     6,=F'5'      load table width counter
         LA    2,PLINE+1    sets r2 to print line address
         MVI   PLINE+1,C' ' clear print line
         MVC   PLINE+2(71),PLINE+1    destructive overlap
         C     5,=F'0'      check if any numbers are remaining
         BE    PEND         break if true
PLOOP1   C     5,=F'0'      checks if numbers have been printed
         BE    PEND1        break if true
         L     7,0(0,3)     get next value from table
         XDECO 7,TEMP       convert to decimal
         MVC   0(12,2),TEMP store in print line
         LA    2,12(0,2)    go to next print line pointer
         LA    3,4(0,3)     go to next table pointer
         S     5,=F'1'      subtract 1 from table length counter
         S     6,=F'1'      subtract 1 from width counter
         C     6,=F'0'      check for line break
         BNE   PLOOP1       go to loop1
         XPRNT PLINE,73     prints the line
         B     PLOOP        go to loop
PEND1    XPRNT PLINE,73     prints the line
PEND     BR    10           break
***********************************
*
*  Register usage:
*    1        xdeci
*    2        line string
*    3        table
*    4        end of table
*    5        table length
*    6        num in table
*    7        division number
*    8        counter for table width
*   10        address to return
*   13        params
*   14        not using
*   15        base register
*
***********************************
ODDS      DS    0H          
         XPRNT OHEAD,48     print odds table head
         LM    3,5,0(13)    place parms into registers 3-5
         L     5,0(0,5)     get length of the table
OLOOP    L     8,=F'6'      set table width to 6 numbers
         LA    2,PLINE+1    load print line
         MVI   PLINE+1,C' ' Clear print line
         MVC   PLINE+2(59),PLINE+1    destructive overlap
         C     5,=F'0'      check if table has been printed
         BE    OEND         break if table has been printed
OLOOP1   C     5,=F'0'      check if table has been printed
         BE    OEND1        break if table has been printed
         L     7,0(0,3)     get next number
         S     5,=F'1'      subtract 1 from r5
         M     6,=F'1'      multiply r6 by 1
         D     6,=F'2'      divide r6 by 1
         C     6,=F'0'      check if num is odd
         BE    SKIP         don't print if num is odd
         L     6,0(0,3)     get number
         XDECO 6,TEMP       convert to decimal
         MVC   0(12,2),TEMP palce in temp
         LA    2,12(0,2)    go to print line
         S     8,=F'1'      subtract one from print line
SKIP     LA    3,4(0,3)     go to table
         C     8,=F'0'      check if r8 is 0
         BNE   OLOOP1       jump to oloop1
         XPRNT PLINE,73     print line
         B     OLOOP        jump to oloop
OEND1    XPRNT PLINE,73     print line
OEND     BR    10           break
***********************************
         LTORG                
TABLE    DS    56F'-12'
EOT      DS    0H
TABLELEN DS    F'0'
PHEAD    DC    CL44'1                            List of Numbers'
OHEAD    DC    CL48'1                            List of Odd Numbers'
TEMP     DS    CL12' '
PARMS    DS    F'0'
         DS    F'0'
         DS    F'0'
PLINE    DC    CL1'0'
         DS    CL72' '
BUFFER   DS    80C
         DC    C'*'
         END   MAIN
/*
//FT05F001  DD  DSN=KC02314.SPRING19.CSCI360.HW4DATA,DISP=SHR
//