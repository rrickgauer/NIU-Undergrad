1                    J E S 2  J O B  L O G  --  S Y S T E M  S 0 W 1  --  N O D E  Z O S K C T R
0
 17.08.45 JOB07443 ---- THURSDAY,  21 MAR 2019 ----
 17.08.45 JOB07443  IRR010I  USERID KC03E62  IS ASSIGNED TO THIS JOB.
 17.08.45 JOB07443  ICH70001I KC03E62  LAST ACCESS AT 17:07:18 ON THURSDAY, MARCH 21, 2019
 17.08.45 JOB07443  $HASP373 KC03E62A STARTED - INIT 2    - CLASS A        - SYS S0W1
 17.08.45 JOB07443  -                                         --TIMINGS (MINS.)--            ----PAGING COUNTS---
 17.08.45 JOB07443  -JOBNAME  STEPNAME PROCSTEP    RC   EXCP    TCB    SRB  CLOCK   SERV  PG   PAGE   SWAP    VIO SWAPS
 17.08.45 JOB07443  -KC03E62A                      00     86 ******    .00     .0    385   0      0      0      0     0
 17.08.45 JOB07443  -KC03E62A ENDED.  NAME-Ryan                 TOTAL TCB CPU TIME=   .00  TOTAL ELAPSED TIME=    .0
 17.08.45 JOB07443  $HASP395 KC03E62A ENDED
0------ JES2 JOB STATISTICS ------
-  21 MAR 2019 JOB EXECUTION DATE
-          232 CARDS READ
-          316 SYSOUT PRINT RECORDS
-            0 SYSOUT PUNCH RECORDS
-           26 SYSOUT SPOOL KBYTES
-         0.00 MINUTES EXECUTION TIME
         1 //KC03E62A JOB ,'Ryan',MSGCLASS=H                                       JOB07443
         2 //STEP1    EXEC  PGM=ASSIST
         3 //STEPLIB    DD  DSN=KC02293.ASSIST.LOADLIB,DISP=SHR
         4 //SYSPRINT   DD  SYSOUT=*
         5 //SYSIN      DD  *
         6 //FT05F001  DD  DSN=KC02314.SPRING19.CSCI360.HW5DATA,DISP=SHR
 ICH70001I KC03E62  LAST ACCESS AT 17:07:18 ON THURSDAY, MARCH 21, 2019
 IEF236I ALLOC. FOR KC03E62A STEP1
 IGD103I SMS ALLOCATED TO DDNAME STEPLIB
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IEF237I JES2 ALLOCATED TO SYSIN
 IGD103I SMS ALLOCATED TO DDNAME FT05F001
 IEF142I KC03E62A STEP1 - STEP WAS EXECUTED - COND CODE 0000
 IGD104I KC02293.ASSIST.LOADLIB                       RETAINED,  DDNAME=STEPLIB
 IEF285I   KC03E62.KC03E62A.JOB07443.D0000102.?         SYSOUT
 IEF285I   KC03E62.KC03E62A.JOB07443.D0000101.?         SYSIN
 IGD104I KC02314.SPRING19.CSCI360.HW5DATA             RETAINED,  DDNAME=FT05F001
 IEF373I STEP/STEP1   /START 2019080.1708
 IEF032I STEP/STEP1   /STOP  2019080.1708
         CPU:     0 HR  00 MIN  00.00 SEC    SRB:     0 HR  00 MIN  00.00 SEC
         VIRT:   584K  SYS:   268K  EXT:        4K  SYS:    11560K
         ATB- REAL:                     0K  SLOTS:                     0K
              VIRT- ALLOC:       0M SHRD:       0M
 IEF375I  JOB/KC03E62A/START 2019080.1708
 IEF033I  JOB/KC03E62A/STOP  2019080.1708
         CPU:     0 HR  00 MIN  00.00 SEC    SRB:     0 HR  00 MIN  00.00 SEC
1*** ASSIST 4.0/A2-05/15/82  470/V7A/0:OS/VS2  INS=SDFP7/X=BGHO, CHECK/TRC/=1180, OPTS=CDKMPR FROM PENN ST*NIU COMPSCI*LT
0
0                                                                                                               PAGE    1
0  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT
                                       1 ************************************************************
                                       2 *
                                       3 *  Program:     5
                                       4 *  Programmer:  Ryan Rickgauer
                                       5 *
                                       6 *  Register usage:
                                       7 *    1        PARAM LIST AND XDECO
                                       8 *    2        BUFFER
                                       9 *   10        LOCATION IN PROGRAM WHEN BRANCHED
                                      10 *   13        MAIN SAVE
                                      11 *   14        DO NOT USE
                                      12 *   15        BASE REGISTER
                                      13 ************************************************************
 000000                               14 MAIN     CSECT
 000000                               15          USING MAIN,15
 000000 50E0 F2D4            002D4    16          ST    14,EXIT             SAVE EXIT LOCATION
 000004 41D0 F208            00208    17          LA    13,SAVEM            SET THE SAVE AREA
 000008 4110 F0B0            000B0    18          LA    1,TABLE             LOAD THE ADDRESS OF TABLE
 00000C 5010 F1F0            001F0    19          ST    1,PARMS             STORE TABLE ADDRESS IN PARAMS
 000010 4110 F1EC            001EC    20          LA    1,EOT               LOAD ADDRESS OF END OF TABLE
 000014 5010 F1F4            001F4    21          ST    1,PARMS+4           STORE END OF TABLE IN PARAMS
 000018 4110 F1EC            001EC    22          LA    1,TABLELEN          LOAD THE ADDRESS OF TABLE LENGTH
 00001C 5010 F1F8            001F8    23          ST    1,PARMS+8           STORE THE TABLE LENGTH IN PARAMS
 000020 4110 F204            00204    24          LA    1,RESULT            LOAD ADDRESS OF RESULTS
 000024 5010 F200            00200    25          ST    1,PARMS+16          STORE IN PARAMS
 000028 4110 F1F0            001F0    26          LA    1,PARMS             ADDRESS OF PARAMS IN R13
 00002C 58A0 F0A0            000A0    27          L     10,=V(BUILD)        LOAD EXTERNAL SUB
 000030 05EA                          28          BALR  14,10               BRANCH TO SUB
 000032 4110 F1F0            001F0    29          LA    1,PARMS             SET PARAMS TO R1
 000036 58A0 F0A4            000A4    30          L     10,=V(PRINT)        LOAD EXTERNAL SUB                                     
 00003A 05EA                          31          BALR  14,10               BRANCH TO SUB
 00003C 58A0 F0A8            000A8    32          L      10,=V(TALLY)       LOAD EXTERNAL SUB
 000040 E000 F281 0050 00281          33 EAT      XREAD BUFF,80             READ IN LINE
 000046 4740 F05E            0005E    34          BL    EATE                CHECK IF LINE EXISTS
 00004A 5320 F281            00281    35          XDECI 2,BUFF              READ NUMBER
 00004E 4710 F040            00040    36          BO    EAT                 CHECK IF NUMBER EXISTS
 000052 5920 F0AC            000AC    37          C     2,=F'-12345678'     CHECK FOR SEPORATOR
 000056 4780 F05E            0005E    38          BE    EATE                IF IT IS END EAT
 00005A 47F0 F040            00040    39          B     EAT                 REPEAT EAT
 00005E                               40 EATE     DS    0H                  END OF EAT
 00005E E000 F281 0050 00281          41 FIND     XREAD BUFF,80             READ IN FIRST LINE
 000064 4740 F094            00094    42          BL    FINDE               END IF THERE IS NO LINE
 000068 5320 F281            00281    43          XDECI 2,BUFF              READ NUMBER
 00006C 4710 F05E            0005E    44          BO    FIND                SKIP IF NO  NUMBER
 000070 4110 F1F0            001F0    45          LA    1,PARMS             LOAD PARAMS
 000074 5020 F1FC            001FC    46          ST    2,PARMS+12          SET SEARCH PARAM
 000078 05EA                          47          BALR  14,10               BRANCH TO EXTERNAL
 00007A 5810 F204            00204    48          L     1,RESULT            LOAD THE RESULT
 00007E 5820 F1FC            001FC    49          L     2,PARMS+12          GET SEARCH NUMBER
 000082 5210 F25B            0025B    50          XDECO 1,RESULTS           DECODE RESULTS
 000086 5220 F275            00275    51          XDECO 2,SNUM              DECODE SNUM
 00008A E020 F250 0031 00250          52          XPRNT SONE,49             PRINT RESULTS
1                                                                                                               PAGE    2
0  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT
 000090 47F0 F05E            0005E    53          B     FIND                TOP OF SEARCH
 000094                               54 FINDE    DS    0H                  END OF SEARCH
 000094 58E0 F2D4            002D4    55          L     14,EXIT             LOAD EXIT LOCATION
 000098 07FE                          56          BR    14                  END PROGRAM
                                      57          LTORG                     LITERALS ARE PUT HERE
 0000A0 000002D8                      58                =V(BUILD)
 0000A4 000003D0                      59                =V(PRINT)
 0000A8 00000530                      60                =V(TALLY)
 0000AC FF439EB2                      61                =F'-12345678'
 0000B0                               62 TABLE    DS    79F'-32'
 0001EC                               63 EOT      DS    0H
 0001EC                               64 TABLELEN DS    F'0'
 0001F0                               65 PARMS    DS    5F'0'
 000204                               66 RESULT   DS    F'0'
 000208                               67 SAVEM    DS    18F'0'
 000250 60E3C8C5D9C540C1              68 SONE     DC    CL11'-THERE ARE '
 00025B                               69 RESULTS  DS    CL12' '
 000267 40D4E4D3E3C9D7D3              70 STWO     DC    CL14' MULTIPLES OF '
 000275                               71 SNUM     DS    CL12' '
 000281                               72 BUFF     DS    80C' '
 0002D4                               73 EXIT     DS    F
                                      74 ************************************************************
                                      75 *
                                      76 *  BUILD
                                      77 *
                                      78 *  REGISTER USAGE:
                                      79 *    1        USED BY XDECI/PARAMS
                                      80 *    2        NUMBER CONVERTED TO DECIMAL
                                      81 *    3        TABLE
                                      82 *    4        END OF TABLE
                                      83 *    5        TABLE LENGTH
                                      84 *    6        COUNTER
                                      85 *   10        BASE
                                      86 *   13        SAVE LOCATION
                                      87 *   14        RETURN ADDRESS
                                      88 *   15        BASE REGISTER
                                      89 *
                                      90 ************************************************************
 0002D8                               91 BUILD    CSECT
 0002D8 90EC D00C            0000C    92          STM   14,12,12(13)        GET PARMS S
 0002DC 18CF                          93          LR    12,15               LOAD R15 INTO R12
 0002D8                               94          USING BUILD,10
 0002DE 9835 1000            00000    95          LM    3,5,0(1)            LOAD PARAMS INTO R3,R4, AND R5
 0002E2 41E0 A0B0            00388    96          LA    14,SAVEB            LOAD ADDRESS OF SAVEB
 0002E6 50D0 E004            00004    97          ST    13,4(,14)           STORE ADDRESSES INTO R13
 0002EA 50E0 D008            00008    98          ST    14,8(,13)           STORE ADDRESSES INTO R14
 0002EE 18DE                          99          LR    13,14               LOAD REGISTER 14 INTO 13
 0002F0 1B66                         100          SR    6,6                 CLEAR R6 TO USE AS A COUNTER
 0002F2 E000 A05C 0050 00334         101 BLOOP    XREAD BUFFER,80           READ A LINE FROM THE INPUT FILE
 0002F8 4740 A046            0031E   102          BL    BEND                CHECK IF READ FAILED
 0002FC 4110 A05C            00334   103          LA    1,BUFFER            LOAD ADDRESS OF BUFFER INTO R1
 000300 5320 1000            00000   104 BLOOP1   XDECI 2,0(,1)             READ NUMBER FROM READ LINE
 000304 4710 A01A            002F2   105          BO    BLOOP               CHECK IF READ FAILS
 000308 5A60 A058            00330   106          A     6,=F'1'             ADD ONE TO COUNTER
 00030C 5020 3000            00000   107          ST    2,0(,3)             STORE NUMBER IN TABLE
 000310 4130 3004            00004   108          LA    3,4(,3)             ADVANCE THE TABLE POINTER
 000314 1934                         109          CR    3,4                 COMPARE TABLE POINTER TO THE EOT
1                                                                                                               PAGE    3
0  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT
 000316 4780 A046            0031E   110          BE    BEND                IF AT EOT END BUILD
 00031A 47F0 A028            00300   111          B     BLOOP1              GOTO TOP OF LOOP
 00031E                              112 BEND     DS    0H                  END LOOP
 00031E 5060 5000            00000   113          ST    6,0(,5)             STORE THE NUMBER OF ELEMENTS
 000322 58D0 D004            00004   114          L     13,4(,13)           LOAD PARMS INTO R13
 000326 98EC D00C            0000C   115          LM    14,12,12(13)        LOAD PARMS INTO R13
 00032A 07FE                         116          BR    14                  END SUBROUTINE
                                     117          LTORG                     LITERALS ARE PUT HERE
 000330 00000001                     118                =F'1'
 000334                              119 BUFFER   DS    80C
 000384 5C                           120          DC    C'*'
 000388                              121 SAVEB    DS    18F'0'
                                     122 ************************************************************
                                     123 *
                                     124 *  PRINT
                                     125 *
                                     126 *  REGISTER USAGE:
                                     127 *    1        USED BY XDECI/PARAMS
                                     128 *    2        LINE LOCATION
                                     129 *    3        TABLE
                                     130 *    4        END OF TABLE
                                     131 *    5        TABLE LENGTH
                                     132 *    6        COUNTER
                                     133 *    7        NUMBER IN THE TABLE
                                     134 *   10        BASE
                                     135 *   13        SAVE AREA
                                     136 *   14        DONT USE
                                     137 *   15        BASE REGISTER
                                     138 *
                                     139 ************************************************************
 0003D0                              140 PRINT    CSECT
 0003D0 90EC D00C            0000C   141          STM   14,12,12(13)        SAVE CALLING ROUTIN'S ADDRESSES
 0003D4 18CF                         142          LR    12,15               PLACE ADDRESS OF RTN NAME INTO R12
 0003D0                              143          USING PRINT,10            SET R10 AS THE BASE REGISTER
 0003D6 9835 1000            00000   144          LM    3,5,0(1)            LOAD PARAMS INTO R3,R4, AND R5
 0003DA 41E0 A114            004E4   145          LA    14,SAVEC            POINT R14 TO SAVE AREA
 0003DE 50D0 E004            00004   146          ST    13,4(,14)           STORE ADDRESS INTO SAVE AREA
 0003E2 50E0 D008            00008   147          ST    14,8(,13)           STORE ADDRESS OF RTN INTO SAVE AREA
 0003E6 18DE                         148          LR    13,14               POINT R13 TO SAVE AREA
 0003E8 E020 A094 001C 00464         149          XPRNT PHEAD,28            PRINT THE TABLE HEAD
 0003EE 5850 5000            00000   150          L     5,0(,5)             LOAD THE LENGTH OF THE TABLE
 0003F2 5860 A088            00458   151 PLOOP    L     6,=F'7'             COUNTER FOR WIDTH OF TABLE
 0003F6 4120 A0B1            00481   152          LA    2,PLINE+1           SET R2 TO ADDRESS OF PRINT LINE
 0003FA 9240 A0B1      00481         153          MVI   PLINE+1,C' '        CLEAR THE PRINT LINE
 0003FE D252 A0B2 A0B1 00482 00481   154          MVC   PLINE+2(83),PLINE+1 CLEAR THE PRINT LINE
 000404 5950 A08C            0045C   155          C     5,=F'0'             CHECK IF ALL NUMS HAVE BEEN PRINTED
 000408 4780 A07A            0044A   156          BE    PEND                IF YES THEN GO TO PEND
 00040C 5950 A08C            0045C   157 PLOOP1   C     5,=F'0'             CHECK IF ALL NUMS HAVE BEEN PRINTED
 000410 4780 A074            00444   158          BE    PEND1               IF YES THEN GO TO PEND1
 000414 5870 3000            00000   159          L     7,0(,3)             GET CURRENT VALUE FROM TABLE
 000418 5270 A105            004D5   160          XDECO 7,TEMP              HEX TO BASE 10
 00041C D20B 2000 A105 00000 004D5   161          MVC   0(12,2),TEMP        STORE BASE 10 NUM IN PRINT LINE
 000422 4120 200C            0000C   162          LA    2,12(,2)            ADVANCE PRINT LINE POINTER
 000426 4130 3004            00004   163          LA    3,4(,3)             ADVANCE TABLE POINTER
 00042A 5B50 A090            00460   164          S     5,=F'1'             DECREMENT TABLE LENGTH COUNTER
 00042E 5B60 A090            00460   165          S     6,=F'1'             DECREMENT LINE WIDTH COUNTER
 000432 5960 A08C            0045C   166          C     6,=F'0'             CHECK IF WE HAVE FILLED A LINE
1                                                                                                               PAGE    4
0  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT
 000436 4770 A03C            0040C   167          BNE   PLOOP1              GOTO TOP OF LOOP1
 00043A E020 A0B0 0055 00480         168          XPRNT PLINE,85            PRINT LINE
 000440 47F0 A022            003F2   169          B     PLOOP               GOTO TOP OF LOOP
 000444 E020 A0B0 0055 00480         170 PEND1    XPRNT PLINE,85            PRINT LINE
 00044A                              171 PEND     DS    0H
 00044A 58D0 D004            00004   172          L     13,4(,13)           LOAD ADDRESS OF CALLING RTN INTO R13
 00044E 98EC D00C            0000C   173          LM    14,12,12(13)        RESTORE REGISTERS
 000452 07FE                         174          BR    14                  END OF SUBROUTINE
                                     175          LTORG                     LITERALS ARE PUT HERE
 000458 00000007                     176                =F'7'
 00045C 00000000                     177                =F'0'
 000460 00000001                     178                =F'1'
 000464 F140404040404040             179 PHEAD    DC    CL28'1              TABLE CONTENT'
 000480 F0                           180 PLINE    DC    CL1'0'
 000481                              181          DS    CL84' '
 0004D5                              182 TEMP     DS    CL12' '
 0004E4                              183 SAVEC    DS    18F'0'
                                     184 ************************************************************
                                     185 *
                                     186 *  TALLY
                                     187 *
                                     188 *  REGISTER USAGE:
                                     189 *    3        TABLE POINTER
                                     190 *    4        EOT
                                     191 *    5        TABLE LENGTH
                                     192 *    6        NUMBER TO CHECK
                                     193 *    7        ADDRESS OF RETURN VAR
                                     194 *    8        CHECKS IF NUM IS MULTIPLE AFTER DIVISION
                                     195 *    9        NEXT NUMBER IN TABLE
                                     196 *   10        BASE
                                     197 *   11        NUMBER OF MULTIPLES FOUND
                                     198 *   13        SAVE AREA
                                     199 *   14        DONT USE
                                     200 *   15        BASE REGISTER
                                     201 *
                                     202 ************************************************************
 000530                              203 TALLY    CSECT
 000530 90EC D00C            0000C   204          STM   14,12,12(13)        LOAD ADDRESS OF CALLING RTN INTO R13
 000534 18CF                         205          LR    12,15               PLACE ADDRESS OF RTN NAME INTO R12
 000530                              206          USING TALLY,10            SET R10 AS THE BASE REGISTER
 000536 9837 1000            00000   207          LM    3,7,0(1)            LOAD PARAMS INTO R3,R4, R5, R6, R7
 00053A 41E0 A060            00590   208          LA    14,SAVED            POINT R14 TO SAVE AREA
 00053E 50D0 E004            00004   209          ST    13,4(,14)           STORE ADDRESS INTO SAVE AREA
 000542 50E0 D008            00008   210          ST    14,8(,13)           STORE ADDRESS OF RTN INTO SAVE AREA
 000546 18DE                         211          LR    13,14               POINT R13 TO SAVE AREA
 000548 1B88                         212          SR    8,8                 CLEAR R8
 00054A 1BBB                         213          SR    11,11               CLEAR R11
 00054C 1934                         214 TLOOP    CR    3,4                 COMPARE TABLE POINTER WITH EOT
 00054E 4780 A048            00578   215          BE    TEND                END IF EQUAL
 000552 5890 3000            00000   216          L     9,0(,3)             LOAD TABLE NUMBER
 000556 5C80 A058            00588   217          M     8,=F'1'
 00055A 1D86                         218          DR    8,6                 DIVIDE R9 BY R6
 00055C 5980 A05C            0058C   219          C     8,=F'0'             CHECK IF IS A MULTIPLE
 000560 4780 A03C            0056C   220          BE    MULT                IF MULTIPLE GOTO MULT
 000564 4130 3004            00004   221          LA    3,4(,3)             ADVANCE TABLE POINTER
 000568 47F0 A01C            0054C   222          B     TLOOP               TOP OF LOOP
 00056C 5AB0 A058            00588   223 MULT     A     11,=F'1'            ADD 1 TO R11
1                                                                                                               PAGE    5
0  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT
 000570 4130 3004            00004   224          LA    3,4(,3)             ADVANCE TABLE POINTER
 000574 47F0 A01C            0054C   225          B     TLOOP               GO TO TOP OF LOOP
 000578                              226 TEND     DS    0H                  END OF TALLY
 000578 50B0 7000            00000   227          ST    11,0(,7)            SET RETURN TO VAR
 00057C 58D0 D004            00004   228          L     13,4(,13)           LOAD ADDRESS OF CALLING RTN INTO R13
 000580 98EC D00C            0000C   229          LM    14,12,12(13)        RESTORE ADDRESSES
 000584 07FE                         230          BR    14                  END OF SUBROUTINE
                                     231          LTORG                     LITERALS ARE PUT HERE
 000588 00000001                     232                =F'1'
 00058C 00000000                     233                =F'0'
 000590                              234 SAVED    DS    18F'0'
                                     235          END   MAIN
0***  NO   STATEMENTS FLAGGED -  NO   WARNINGS,  NO   ERRORS
0*** DYNAMIC CORE AREA USED:  LOW:   12236 HIGH:    1300 LEAVING:  480032 FREE BYTES. AVERAGE:       57 BYTES/STMT ***
0*** ASSEMBLY TIME =    0.000 SECS,   236000 STATEMENTS/SEC ***
0*** PROGRAM EXECUTION BEGINNING - ANY OUTPUT BEFORE EXECUTION TIME MESSAGE IS PRODUCED BY USER PROGRAM ***
1              TABLE CONTENT
0      -26924         290          97        3290         351          74        -350
0        -724        -104         -37          53       -8909        6300          46
0          13         591          10          26       -1869       -6299           3
0         333      -15141         868         662         859        -529          35
0        -288       -8942       27446       -6729         600        3548         -84
0        -840      -13931       32439       -5537          82         837          58
0       39770       22386       20537        7595       -4350        -374          21
0         -68        4734          78        -788       -3728       22483         310
0         514       18935       -5249         798       11008       14989         495
0          23        9503          65          76           4           6      -18467
0        -169         -58        5705      -16827        2995        5436         902
0         382         718
-THERE ARE           16 MULTIPLES OF            7
-THERE ARE           10 MULTIPLES OF           13
-THERE ARE           10 MULTIPLES OF          -10
-THERE ARE           17 MULTIPLES OF            4
-THERE ARE            8 MULTIPLES OF            9
-THERE ARE           17 MULTIPLES OF           -5
0*** EXECUTION TIME =    0.002 SECS.      6288 INSTRUCTIONS EXECUTED -  3144000 INSTRUCTIONS/SEC ***
0*** AM004 - NORMAL USER TERMINATION BY RETURN ***
